Title: Record – knowledge graph database approach unfold discovery Neo4j Client BackgroundClient: leading retail firm USAIndustry Type: RetailServices: Retail business, consumer servicesOrganization Size: 100+The ProblemTo data ingested Neo4j nodes relationships properties determine nodes person. eg: nodes data, people enter names ways. aim identify nodes similar data person. represented perfect match nodes. single-person view referred RecordOur SolutionTill date, loaded data Neo4j created relationships score property defines match strength. created criterias determine constitutes nodes based created ‘perfect match’ ‘probable match’.We considered properties criteria – full name, address, driver’s license, passport number. relationships nodes properties scores, perfect match probable match creation.We configured Graphlytics (a software) virtual machine connects neo4j database helps vizualize nodes relationships. worked algorithms GDS library neo4j produce information graph, common algorithm produce scores based node similarity higher score higher similarity. algorithms properties String format work it.We Resolved issues neo4j facing deleting set data Provided steps recover neo4j fails OutofMemory.We figured issues probable perfect match cypher queries working intended proposed solution. Solution ArchitectureDeliverablesCreated Perfect match probable match queries. Created queries return nodes (even relationship) it’s relationship. cypher query return result json object mapped java oject. cypher query create relationship node’s properties value. cypher query delete relationship bidirectional relationship. python code neo4j query Adjust perfect probable match queries work current data. Tools usedNeo4jLanguage/techniques usedCypher Query LanguageModels usedThe common algorithmSkills usedCQLDatabases usedNeo4j