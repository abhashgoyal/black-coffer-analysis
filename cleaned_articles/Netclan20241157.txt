Title: Stocktwits Data Structurization Client BackgroundClient: leading financial institution USAIndustry Type: Financial services & ConsultingServices: Financial consultantOrganization Size: 100+Project Objective>To process json file stocktwits_legacy_msg_2015_10.txt (file size = 2 GB) & stocktwits_legacy_msg_2015_10.txt (file size = 3.5 GB).>To handle Nested Json files conversion merged Data perform Data Structurization.>While accessing Json file JupyterNB, perform Chunking file size bigger json format avoid PC standstill.>After Data Preprocessing perform Exploratory Data Analysis Data.> Conditional Programming Data Transferring folder based column values.Project DescriptionDuring training period involved 2 live projects, project named ‘Stocktwits Data Structurization’ process huge JSON Data obtained size data 5 GB process data chunking chunk size = 20000 rows time. file nested JSON data it’s attributes abstracts data nested columns dataframe. Completed handling complex nested json formed columns abstracted nested json. Handle missing data mapping index dataset missing values attributes handled 0 substitution. task involves numerous pandas operations multiple python functions. Exploratory Data Analysis cleaned dataset finding correlation matrix plotting seaborn graphs correlated attributes.Our SolutionWorked Accessing Json Data, tree Analysis Json data.Both File big reading applying Python Code JupyterNb, performed chunking stocktwits_legacy_messages_2015_10.txt chunk size = 20000 rows time. Similarly file.Created list chunked files Json Data & Concat files list.The File Nested Json data it’s attributes abstracted data nested columns DataFrame. Completed handling complex nested json formed columns abstracted nested json.Renamed columns identification. (Eg: ‘id’ ‘entities_id’) likewise others. merging data doesn’t create issue. Completed forming Preprocessed csv file 1st json file Output2015.csv.For file size > 3gb splitted file parts individually solved nested json parts 1st file finally concat one, handled columns arrangements removed unwanted columns finally removed dictionary representation entity_sentiments column. Completed forming Preprocessed csv file 2nd json file Output_Stocktwits_2017.csv.The cleaned dataset finding correlation matrix plotting seaborn graphs correlated attributes. Exploratory Data Analysis cleaned dataset finding correlation matrix plotting seaborn graphs correlated attributes. Conditional Programming Data Transferring folder based column values.Project DeliverablesCategorized Preprocessed CSV FilesPython ScriptiPython NB comments performed code.Tools used● Jupyter Notebook● Anaconda● Notepad++● Sublime Text● Brackets● JsonViewerLanguage/techniques used● Python ProgrammingModels usedMy project ‘Stocktwits Data Structurization’ developed software model makes project quality, reliable cost effective.● Software Model : RAD(Rapid Application Development model) Model● project RAD Model model forming loop end start, project based prototyping specific planning. RAD model, attention paid planning priority development tasks. targets developing software span time.● Advantages RAD Model:o Changing requirements accommodated.o Progress measured.o Iteration time powerful RAD tools.o Productivity fewer people time.o Reduced development time.o Increases reusability components.o initial reviews occur.o Encourages customer feedback.o Integration beginning solves lot integration issuesSkills used● Data Mining● Data Wrangling● Data Visualization● Python Programming including OOPs Exception HandlingDatabases usedNo Databases used, data stored Google Drive Local Device.Web Servers usedNo Server usedWhat technical Challenges Faced Project Execution● Handling Huge Data Data Cleaning● JSON Data Serialization.● Solving Complex Nested JSON data provided.How Technical Challenges Solved● Handling Huge Data Data CleaningSolved Breaking Dataset 10 stream parts data huge easily Jupyter NB.● JSON Data SerializationSolved Data Chunking chunk_size=20000 serialization data processing 20000 rows time.● Solving Complex Nested JSON data provided.Viewed Structure part data JSON Viewer Changed data proper standard JSON Format. Reading JSON Data Performing Normalization Nested JSON data setting maximum level normalization proper orient form. Normalization remaining Unsolved Nested JSON solved Dictionary Conversions Structuring data. Project Snapshots Figure 1 Input Dataframe Converting Outer JSONFigure 2 Output Dataframe Solving Nested JSON Data Preprocessing Previous articleHow artificial intelligence boost productivity level?Next articleMarbles Stimulation python Ajay Bidyarthy RELATED ARTICLESMORE AUTHOR ML-Based YouTube Analytics Content Creation Tool Optimizing Subscriber Engagement Content StrategyEnhancing Front-End Features Functionality Improved User Experience Dashboard Accuracy Partner Hospital ApplicationROAS Dashboard Campaign-Wise Google Ads Budget Tracking Google Ads AP